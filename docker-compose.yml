# docker-compose.yml
version: "3.7"
services:
  zookeeper:
    restart: always
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper-volume:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    restart: always
    image: docker.io/bitnami/kafka:3.3
    ports:
      - "9093:9093"
    volumes:
      - "kafka-volume:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
  postgresql:
    image: postgres:latest
    restart: always
    volumes:
      - "postgresql-volume:/var/lib/postgresql/data"
      - "./scripts:/docker-entrypoint-initdb.d"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin # Change to your desired username
      POSTGRES_PASSWORD: admin # Change to your desired password
      POSTGRES_DB: data-warehouse # Change to your desired database name
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin" ] # Change to your desired username
      interval: 10s
      timeout: 5s
      retries: 5
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: 'admin'
      GF_SECURITY_ADMIN_PASSWORD: 'admin'
      # You can add other environment variables here to configure Grafana
    volumes:
      - grafana_data:/var/lib/grafana
      # You can mount additional volumes for Grafana plugins or provisioning files
    restart: unless-stopped
volumes:
  kafka-volume:
  zookeeper-volume:
  postgresql-volume:
  grafana_data: